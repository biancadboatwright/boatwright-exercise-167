//AUTHOR: [Bianca Boatwright]
//COURSE: CPT167
//PURPOSE: To use information provided to get the final report
//START DATE: OCTOBER 1 2020
package edu.cpt167.boatwright.exercise6;
import java.util.Scanner;
public class BoatwrightMainClass 
{
	//CONSTANTS
	public static final double TAX_RATE = .075;
	public static final String DISCOUNT_NAME_MEMBER = "Member";
	public static final String DISCOUNT_NAME_SENIOR = "Senior";
	public static final String DISCOUNT_NAME_NONE = "No Discount";
	public static final String DISCOUNT_NAME_QUIT = "Quit";
	public static final double DISCOUNT_RATE_MEMBER = 0.15;
	public static final double DISCOUNT_RATE_SENIOR = 0.25;
	public static final double DISCOUNT_RATE_NONE = 0.0;
	public static final String ITEM_NAME_PREMIUM = "Premium";
	public static final String ITEM_NAME_SPECIAL = "Special";
	public static final String ITEM_NAME_BASIC = "Basic";
	public static final String ITEM_NAME_RETURN = "Return to main menu";
	public static final double ITEM_PRICE_PREMIUM = 55.95;
	public static final double ITEM_PRICE_SPECIAL = 24.95;
	public static final double ITEM_PRICE_BASIC = 15.95;
	
	public static void main(String[] args) 
	{
		////Create a Scanner
		//Declare and Initialize all CONSTANTS and Variables
		Scanner input = new Scanner(System.in);
		
		//Variables
		String userName = "";
		char rateSelection = ' ';
		char itemSelection = ' ';
		int howMany = 0;
		String discountName = "";
		double discountRate = 0.0;
		String itemName = "";
		double itemPrice = 0.0;
		double discountAmount = 0.0;
		double discountPrice = 0.0;
		double subTotal = 0.0;
		double tax = 0.0;
		double totalCost = 0.0;
		int memberCount = 0;
		int seniorCount = 0;
		int noDiscountCount = 0;
		double grandTotal = 0.0;
		int premiumCount = 0;
		int specialCount = 0;
		int basicCount = 0;
		double purchaseAmt = 0.0;
		
		//Welcome Banner
		displayWelcomeBanner();
		System.out.println("Welcome to the program shop!");
		
		System.out.println("Let's get started, what is your name");
		userName = input.nextLine();
		
		
		rateSelection = validateMainMenu(input);
		
		//run while
		while (rateSelection != 'Q')
		{
			itemSelection = validateItemMenu(input);
			
		while (itemSelection != 'R')
		{
			howMany = validateHowMany(input);
			
			if(rateSelection == 'A') 
			{
				discountName = DISCOUNT_NAME_MEMBER;
				discountRate = DISCOUNT_RATE_MEMBER;
				memberCount++;
			}
			else if (rateSelection == 'B') 
			{
				discountName = DISCOUNT_NAME_SENIOR;
				discountRate = DISCOUNT_RATE_SENIOR;
				seniorCount++; 
			}
			else 
			{
				discountName = DISCOUNT_NAME_NONE;
				discountRate = DISCOUNT_RATE_NONE;
				noDiscountCount++;
			}
			if (itemSelection == 'A') 
			{
				itemName = ITEM_NAME_PREMIUM;
				itemPrice = ITEM_PRICE_PREMIUM;
			}
			else if (itemSelection == 'B')
			{
				itemName = ITEM_NAME_SPECIAL;
				itemPrice = ITEM_PRICE_SPECIAL;
			}
			else 
			{
				itemName = ITEM_NAME_BASIC;
				itemPrice = ITEM_PRICE_BASIC;
			}
			//Output Section
			//calculate the total
			discountAmount = itemPrice * discountRate;
			discountPrice = itemPrice - discountAmount;
			purchaseAmt = howMany * discountPrice;
			subTotal = subTotal + purchaseAmt;
			tax = subTotal * TAX_RATE;
			totalCost = subTotal + tax;
			grandTotal = grandTotal + totalCost;
			
			displayItemReceipt(itemName, itemPrice, discountName, discountRate, discountAmount, discountPrice, howMany, purchaseAmt, subTotal);
			
			itemSelection = validateItemMenu(input);
		} //END while
		if (grandTotal > 0.0) 
		{
			
			displayOrderTotal(userName, subTotal, tax, totalCost);
		}
			
			rateSelection = validateMainMenu(input);	
		}
		
		displayFinalReport(memberCount, seniorCount, noDiscountCount, premiumCount, specialCount, basicCount, grandTotal);
		
		//Farewell Message
		System.out.println("Thanks! Have a great day!");
		
		//Close scanner
		input.close();
	}//End of Method
	
	//Welcome Banner
	public static void displayWelcomeBanner() 
	{
		System.out.println("--------------------------------");
		System.out.println("Welcome to the program shop!");
		System.out.println("--------------------------------");
	}//End of Welcome
	
	public static char validateMainMenu(Scanner borrowedInput)
	{
		char tempRateSelection;
		//display menu
		System.out.println("DISCOUNT MENU");
		System.out.printf("%-6s%-20s%-4.1f%1s\n" , "[A]" , DISCOUNT_NAME_MEMBER,  DISCOUNT_RATE_MEMBER * 100 , "%");
		System.out.printf("%-6s%-20s%-4.1f%1s\n" , "[B]" , DISCOUNT_NAME_SENIOR,  DISCOUNT_RATE_SENIOR * 100 , "%");
		System.out.printf("%-6s%-20s%-4.1f%1s\n" , "[C]" , DISCOUNT_NAME_NONE , DISCOUNT_RATE_NONE * 100 , "%");
		System.out.printf("%-6s%-20s\n" , "[Q]" , DISCOUNT_NAME_QUIT);
		System.out.println("Select your discount option:");
		tempRateSelection = borrowedInput.next().toUpperCase().charAt(0);
		
		//must validate input
		while (tempRateSelection != 'A' && tempRateSelection != 'B' && tempRateSelection != 'C' && tempRateSelection != 'Q')
		{
			//display error
			System.out.println("Invalid selection. Please try again");
			//display menu
			System.out.println("DISCOUNT MENU");
			System.out.printf("%-6s%-20s%-4.1f%1s\n" , "[A]" , DISCOUNT_NAME_MEMBER,  DISCOUNT_RATE_MEMBER * 100 , "%");
			System.out.printf("%-6s%-20s%-4.1f%1s\n" , "[B]" , DISCOUNT_NAME_SENIOR,  DISCOUNT_RATE_SENIOR * 100 , "%");
			System.out.printf("%-6s%-20s%-4.1f%1s\n" , "[C]" , DISCOUNT_NAME_NONE , DISCOUNT_RATE_NONE * 100 , "%");
			System.out.printf("%-6s%-20s\n" , "[Q]" , DISCOUNT_NAME_QUIT);
			System.out.println("Select your discount option:");
			tempRateSelection = borrowedInput.next().toUpperCase().charAt(0);			
		}
		return tempRateSelection;
	}// End of Rate selection Method
	
	public static char validateItemMenu(Scanner borrowedInput)
	{
		char tempItemSelection;
		//display menu
				System.out.println("ITEM MENU");
				System.out.printf("%-6s%-20s%1s%2.2f\n" , "[A]" , ITEM_NAME_PREMIUM , "$" , ITEM_PRICE_PREMIUM);
				System.out.printf("%-6s%-20s%1s%2.2f\n" , "[B]" , ITEM_NAME_SPECIAL , "$" , ITEM_PRICE_SPECIAL);
				System.out.printf("%-6s%-20s%1s%2.2f\n" , "[C]" , ITEM_NAME_BASIC, "$" , ITEM_PRICE_BASIC);
				System.out.printf("%-6s%-20s\n" , "[R]" , ITEM_NAME_RETURN);
				System.out.println("Enter you selection");
				tempItemSelection = borrowedInput.next().toUpperCase().charAt(0);
				
				//must validate input
				while (tempItemSelection != 'A' && tempItemSelection != 'B' && tempItemSelection !='C' && tempItemSelection != 'R') 
				{
					//display error
					System.out.println("Invalid Selection. Please try again");
					//display menu
					System.out.println("ITEM MENU");
					System.out.printf("%-6s%-20s%1s%2.2f\n" , "[A]" , ITEM_NAME_PREMIUM , "$" , ITEM_PRICE_PREMIUM);
					System.out.printf("%-6s%-20s%1s%2.2f\n" , "[B]" , ITEM_NAME_SPECIAL , "$" , ITEM_PRICE_SPECIAL);
					System.out.printf("%-6s%-20s%1s%2.2f\n" , "[C]" , ITEM_NAME_BASIC, "$" , ITEM_PRICE_BASIC);
					System.out.printf("%-6s%-20s\n" , "[R]" , ITEM_NAME_RETURN);
					System.out.println("Enter you selection");
					tempItemSelection = borrowedInput.next().toUpperCase().charAt(0);
				}
				return tempItemSelection;
			}// End of Item Selection
	
	public static int validateHowMany(Scanner borrowedInput)
	{
		int tempHowMany = 0;
		System.out.println("How many would you like?");
		tempHowMany = borrowedInput.nextInt();
		while (tempHowMany <= 0)
		{
			System.out.println("Quantity cannot be less than or equal to 0");
			System.out.println("How many would you like?");
			tempHowMany = borrowedInput.nextInt();
			System.out.println();
		}
		return tempHowMany;
	}//End of quantity
	
	public static void displayItemReceipt(String borrowedItemName, double borrowedItemPrice, String borrowedDiscountName, double borrowedDiscountRate, double borrowedDiscountAmount, double borrowedDiscountPrice, int borrowedHowMany, double borrowedPurchaseAmt, double borrowedSubTotal)
	{
		//Display Receipt
		System.out.println("--------------------------------");
		System.out.println("RECEIPT");
		System.out.println("--------------------------------");
		System.out.printf("%-28s%-1s\n" , "Item name" , borrowedItemName);
		System.out.printf("%-28s%-1s%7.2f\n" , "Original Price", "$" , borrowedItemPrice);
		System.out.printf("%-28s%-1s\n" , "Discount Type",  borrowedDiscountName);
		System.out.printf("%-28s%7.1f%-1s\n" , "Discount Rate" , borrowedDiscountRate * 100, "%");
		System.out.printf("%-28s%-1s%7.2f\n" , "Discount Amount", "$" , borrowedDiscountAmount);
		System.out.printf("%-28s%-1s%7.2f\n" , "Discounted Price", "$" , borrowedDiscountPrice);
		System.out.printf("%-28s%8d\n" , "Quantity" , borrowedHowMany);
		System.out.printf("%-28s%-1s%7.2f\n" , "Purchase Amount", "$",  borrowedPurchaseAmt);
		System.out.printf("%-28s%-1s%7.2f\n" , "Subtotal", "$" , borrowedSubTotal);
		System.out.println("--------------------------------");

	}//End of report method
	
	public static void displayOrderTotal(String borrowedUserName, double borrowedSubTotal, double borrowedTax, double borrowedTotalCost)
	{
		//Display Order total
		System.out.println("--------------------------------");
		System.out.println("ORDER REPORT");
		System.out.println("--------------------------------");
		System.out.printf("%-28s%-1s\n" , "Username" , borrowedUserName);
		System.out.printf("%-28s%-1s%7.2f\n" , "Subtotal", "$" , borrowedSubTotal);
		System.out.printf("%-28s%-1s%7.2f\n" , "Subtotal", "$" , borrowedTax);
		System.out.printf("%-28s%-1s%7.2f\n" , "Subtotal", "$" , borrowedTotalCost);
	}//End of order total
	
	public static void displayFinalReport( int borrowedMemberCount, int borrowedSeniorCount , int borrowedNoDiscountCount, int borrowedPremiumCount, int borrowedSpecialCount, int borrowedBasicCount, double borrowedGrandTotal)
	{
		//Display Final Report
		System.out.println("--------------------------------");
		System.out.println("FINAL REPORT");
		System.out.println("--------------------------------");
		System.out.println("Count of Discount types:");
		System.out.printf("%-28s%-1s\n" , "Member" , borrowedMemberCount);
		System.out.printf("%-28s%-1s\n" , "Senior" , borrowedSeniorCount);
		System.out.printf("%-28s%-1s\n" , "No Discount" , borrowedNoDiscountCount);
		System.out.println("--------------------------------");
		System.out.println("Count of Item types:");
		System.out.printf("%-28s%-1s\n" , "Premium" , borrowedPremiumCount);
		System.out.printf("%-28s%-1s\n" , "Special" , borrowedSpecialCount);
		System.out.printf("%-28s%-1s\n" , "Basic" , borrowedBasicCount);
		System.out.println("--------------------------------");
		System.out.printf("%-28s%-1s%7.2f\n" , "Grand Total" , "$", borrowedGrandTotal);
		System.out.println("--------------------------------");
	}//End of report method
}//End of glass
		
	

	

			
		
		
	


